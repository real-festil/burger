{"version":3,"sources":["components/Burger/BurgerIngridient/BurgerIngridient.css","components/Navigation/Sidedrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/Menu/Menu.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Menu/Menu.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngridient/BurgerIngridient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/WithErrorHandler/WithErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBulder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","index.js"],"names":["module","exports","Aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","menu","Menu","onClick","menuOpened","toolbar","Toolbar","opened","DesktopOnly","backdrop","show","Backdrop","clicked","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerOpenHandler","setState","sideDrawerCloseHandler","this","Content","Component","BurgerIngridient","ingridient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","withRouter","transformedIngridients","Object","keys","ingridients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingridientAdded","ingridientRemoved","OrderButton","purchaseable","ordered","modal","modalClosed","Modal","transform","opacity","button","Button","btnType","orderSummary","ingridientsSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","interceptors","request","use","req","response","res","message","instance","create","baseURL","BurgerBulder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","onInitIngridients","sum","disabledInfo","ings","burger","Spinner","onIngridientAdded","onIngridientRemoved","updatePurchaseState","OrderSummary","connect","totalPrice","dispatch","ingName","ingridientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","country","email","deliveryMethod","formIsValid","loading","orderHandler","event","preventDefault","formData","formElementId","order","orderData","post","console","log","inputChangedHandler","inputId","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingridientOutput","ig","display","border","padding","Order","orders","fetchedOrders","err","App","Orders","Boolean","window","location","hostname","INGRIDIENTS_PRICES","salad","cheese","meat","bacon","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,qBCA/UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,4B,gBCAtGD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,oBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,gBCAnED,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,2BCA7FD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,iBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,iBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,uB,mPCCXC,EAFH,SAAEC,GAAF,OAAaA,EAAMC,U,oECUhBC,EANF,SAACF,GAAD,OACT,yBAAKG,UAAWC,IAAQC,KAAMC,MAAO,CAACC,OAAQP,EAAMO,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,e,iBCQnBC,EAVQ,SAAEX,GAAF,OACnB,wBAAIG,UAAWC,IAAQQ,gBACnB,kBAAC,IAAD,CACIC,GAAIb,EAAMc,KACVC,OAAK,EACLC,gBAAiBZ,IAAQa,QAASjB,EAAMC,Y,iBCErCiB,EAPS,SAAClB,GAAD,OACpB,wBAAIG,UAAWC,IAAQe,iBACnB,kBAACP,EAAD,CAAgBE,KAAK,KAArB,iBACA,kBAACF,EAAD,CAAgBE,KAAK,WAArB,Y,iBCIOM,EARF,SAAEpB,GAAF,OACT,yBAAKG,UAAWC,IAAQiB,KAAMC,QAAStB,EAAMuB,YACzC,8BACA,8BACA,gCCSOC,EAVC,SAAExB,GAAF,OACZ,4BAAQG,UAAWC,IAAQqB,SACvB,kBAACJ,EAAD,CAAME,WAAYvB,EAAM0B,SACxB,kBAACrB,EAAD,CAAME,OAAO,QACb,yBAAKJ,UAAWC,IAAQuB,aACpB,kBAACR,EAAD,S,kCCJGS,EAJE,SAAE5B,GAAF,OACbA,EAAM6B,KAAO,yBAAK1B,UAAWC,IAAQ0B,SAAUR,QAAStB,EAAM+B,UAAkB,MCqBrEC,EAlBK,SAAEhC,GAClB,IAAIiC,EAAkB,CAAE7B,IAAQ8B,WAAY9B,IAAQ+B,OAIpD,OAHInC,EAAMoC,OACNH,EAAkB,CAAE7B,IAAQ8B,WAAY9B,IAAQiC,OAGhD,kBAAC,EAAD,KACI,kBAACP,EAAD,CAAUD,KAAM7B,EAAMoC,KAAML,QAAS/B,EAAMsC,SAC3C,yBAAKnC,UAAW8B,EAAgBM,KAAK,MACjC,kBAAClC,EAAD,CAAME,OAAO,QACb,6BACI,kBAACY,EAAD,UCiBLqB,E,2MA5BXC,MAAQ,CACJC,gBAAgB,G,EAGpBC,sBAAwB,WACpB,EAAKC,SAAS,CAACF,gBAAe,K,EAGlCG,uBAAyB,WACrB,EAAKD,SAAS,CAACF,gBAAe,K,wEAI9B,OACI,kBAAC,EAAD,KACI,kBAACjB,EAAD,CAASC,OAAQoB,KAAKH,wBACtB,kBAACT,EAAD,CACIE,KAAMU,KAAKL,MAAMC,eACjBJ,OAAQQ,KAAKD,yBAEjB,0BAAM1C,UAAWC,IAAQ2C,SACpBD,KAAK9C,MAAMC,e,GAtBX+C,a,kDCsCNC,E,iLAtCP,IAAIC,EAAa,KAErB,OAAQJ,KAAK9C,MAAMmD,MACf,IAAO,eACHD,EAAa,yBAAK/C,UAAWC,IAAQgD,cACrC,MACJ,IAAO,YACHF,EACI,yBAAK/C,UAAWC,IAAQiD,UACpB,yBAAKlD,UAAWC,IAAQkD,SACxB,yBAAKnD,UAAWC,IAAQmD,UAGhC,MACJ,IAAO,OACHL,EAAa,yBAAK/C,UAAWC,IAAQoD,OACrC,MACJ,IAAO,SACCN,EAAa,yBAAK/C,UAAWC,IAAQqD,SACrC,MACR,IAAO,QACCP,EAAa,yBAAK/C,UAAWC,IAAQsD,QACpC,MACT,IAAO,QACCR,EAAa,yBAAK/C,UAAWC,IAAQuD,QACrC,MACR,QACIT,EAAa,KAGrB,OAAOA,M,GAhCoBF,aC0BhBY,eAzBC,SAAE5D,GAEd,IAAI6D,EAAyBC,OAAOC,KAAK/D,EAAMgE,aAC1CC,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMnE,EAAMgE,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGlB,KAAMe,UAGtDK,QAAQ,SAAEC,EAAKC,GACZ,OAAOD,EAAIE,OAAOD,KACnB,IAMP,OAJqC,IAAlCZ,EAAuBc,SACtBd,EAAyB,4CAIzB,yBAAK1D,UAAWC,IAAQwE,QACpB,kBAAC,EAAD,CAAkBzB,KAAK,cACtBU,EACD,kBAAC,EAAD,CAAkBV,KAAK,qB,mCCPpB0B,GAfM,SAAE7E,GAAF,OACjB,yBAAKG,UAAWC,KAAQ0E,cACpB,yBAAK3E,UAAWC,KAAQ2E,OAAQ/E,EAAMgF,OACtC,4BACI7E,UAAWC,KAAQ6E,KACnB3D,QAAStB,EAAMkF,QACfC,SAAUnF,EAAMmF,UAHpB,QAKA,4BACIhF,UAAWC,KAAQgF,KACnB9D,QAAStB,EAAMqF,OAFnB,UCPFC,GAAW,CACb,CAACN,MAAO,QAAS7B,KAAM,SACvB,CAAC6B,MAAO,QAAS7B,KAAM,SACvB,CAAC6B,MAAO,SAAU7B,KAAM,UACxB,CAAC6B,MAAO,OAAQ7B,KAAM,SAqBXoC,GAlBO,SAAEvF,GAAF,OAClB,yBAAKG,UAAWC,IAAQoF,eACpB,6CAAkB,gCAASxF,EAAMyF,MAAMC,QAAQ,KAC9CJ,GAASrB,KAAI,SAAA0B,GAAI,OACd,kBAACb,GAAD,CACAR,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMrF,EAAM4F,gBAAgBD,EAAKxC,OACxC+B,QAAS,kBAAMlF,EAAM6F,kBAAkBF,EAAKxC,OAC5CgC,SAAUnF,EAAMmF,SAASQ,EAAKxC,WAElC,4BACIhD,UAAWC,IAAQ0F,YACnBX,UAAWnF,EAAM+F,aACjBzE,QAAStB,EAAMgG,SAHnB,e,oBCFOC,GAdD,SAAEjG,GAAF,OACV,kBAAC,EAAD,KACI,kBAAC8B,EAAD,CAAUD,KAAM7B,EAAM6B,KAAME,QAAS/B,EAAMkG,cAC3C,yBACI/F,UAAWC,KAAQ+F,MACnB7F,MAAO,CACH8F,UAAWpG,EAAM6B,KAAO,gBAAkB,qBAC1CwE,QAASrG,EAAM6B,KAAO,IAAM,MAE/B7B,EAAMC,Y,oBCLJqG,GAPA,SAAEtG,GAAF,OACX,4BACImF,SAAUnF,EAAMmF,SAChBhF,UAAW,CAACC,KAAQmG,OAAQnG,KAAQJ,EAAMwG,UAAUjE,KAAK,KACzDjB,QAAStB,EAAM+B,SAAU/B,EAAMC,WCsBxBwG,GAzBM,SAAEzG,GACnB,IAAM0G,EAAqB5C,OAAOC,KAAK/D,EAAMgE,aACxCC,KAAI,SAAAC,GACD,OACA,4BACI,0BAAM5D,MAAO,CAACqG,cAAe,eAC5BzC,EADD,KACUlE,EAAMgE,YAAYE,QAIxC,OACE,kBAAC,EAAD,KACI,0CACA,+EACA,4BACGwC,GAEH,2CAAiB1G,EAAMyF,OACvB,qDACA,kBAACc,GAAD,CAAQC,QAAQ,SAASzE,QAAS/B,EAAM4G,mBAAxC,UACA,kBAACL,GAAD,CAAQC,QAAQ,UAAUzE,QAAS/B,EAAM6G,mBAAzC,c,oBCjBKC,GAJC,kBACZ,yBAAK3G,UAAWC,KAAQ2G,QAAxB,eCoCWC,GApCU,SAAEC,EAAkBC,GACzC,kNACIzE,MAAQ,CACJ0E,MAAO,MAFf,EAgBIC,sBAAwB,WACpB,EAAKxE,SAAS,CAACuE,MAAO,QAjB9B,mFAK0B,IAAD,OACjBD,EAAMG,aAAaC,QAAQC,KAAK,SAAAC,GAE5B,OADA,EAAK5E,SAAS,CAACuE,MAAO,OACfK,KAGXN,EAAMG,aAAaI,SAASF,KAAI,SAAAG,GAAG,OAAIA,KAAK,SAAAP,GACxC,EAAKvE,SAAS,CAACuE,MAAOA,SAZlC,+BAqBQ,OACI,kBAAC,EAAD,KACI,kBAAChB,GAAD,CACID,YAAapD,KAAKsE,sBAClBvF,KAAMiB,KAAKL,MAAM0E,OAChBrE,KAAKL,MAAM0E,MAAQrE,KAAKL,MAAM0E,MAAMQ,QAAU,MAEnD,kBAACV,EAAqBnE,KAAK9C,YA5B3C,GAAqBgD,c,SCCV4E,G,QAJEV,EAAMW,OAAO,CAC1BC,QAAU,wC,yOCURC,G,2MAEFtF,MAAQ,CACJuF,YAAY,G,EAgBhBC,gBAAkB,WACd,EAAKrF,SAAS,CAACoF,YAAY,K,EAG/BE,sBAAwB,WACpB,EAAKtF,SAAS,CAACoF,YAAW,K,EAG9BG,wBAA0B,WACtB,EAAKnI,MAAMoI,QAAQC,KAAK,c,mFArBxBvF,KAAK9C,MAAMsI,sB,0CAGOtE,GAMlB,OALYF,OAAOC,KAAKC,GAAaC,KAAI,SAAAC,GACrC,OAAOF,EAAYE,MACpBK,QAAO,SAACgE,EAAK9D,GACZ,OAAO8D,EAAM9D,IACd,GACQ,I,+BAgBX,IAAM+D,E,2VAAY,IACX1F,KAAK9C,MAAMyI,MAGlB,IAAM,IAAInE,KAAOkE,EACbA,EAAalE,GAAOkE,EAAalE,IAAQ,EAG7C,IAAImC,EAAe,KAEfiC,EAAS5F,KAAK9C,MAAMmH,MAAS,oCAAe,kBAACwB,GAAD,MAsBhD,OApBI7F,KAAK9C,MAAMyI,OACXC,EACI,kBAAC,EAAD,KACI,kBAAC9D,EAAD,CAAQZ,YAAalB,KAAK9C,MAAMyI,OAChC,kBAACjD,GAAD,CACII,gBAAiB9C,KAAK9C,MAAM4I,kBAC5B/C,kBAAmB/C,KAAK9C,MAAM6I,oBAC9B1D,SAAUqD,EACVzC,aAAejD,KAAKgG,oBAAqBhG,KAAK9C,MAAMyI,MACpDzC,QAASlD,KAAKmF,gBACdxC,MAAS3C,KAAK9C,MAAMyF,QAR5B,KAWJgB,EAAe,kBAACsC,GAAD,CACP/E,YAAalB,KAAK9C,MAAMyI,KACxBhD,MAAO3C,KAAK9C,MAAMyF,MAAMC,QAAQ,GAChCkB,kBAAmB9D,KAAKoF,sBACxBrB,kBAAmB/D,KAAKqF,2BAIhC,kBAAC,EAAD,KACI,kBAAChC,GAAD,CAAOtE,KAAMiB,KAAKL,MAAMuF,WAAY9B,YAAapD,KAAKoF,uBACjDzB,GAEJiC,O,GArEU1F,aA2FZgG,gBAhBS,SAAAvG,GACpB,MAAO,CACHgG,KAAMhG,EAAMuB,YACZyB,MAAOhD,EAAMwG,WACb9B,MAAO1E,EAAM0E,UAIM,SAAA+B,GACvB,MAAO,CACHN,kBAAmB,SAACO,GAAD,OAAaD,EC9F7B,CACH/F,KCLsB,iBDMtBiG,eD4F4ED,KAC5EN,oBAAqB,SAACM,GAAD,OAAaD,ECxF/B,CACH/F,KCXyB,oBDYzBiG,eDsFiFD,KACjFb,kBAAmB,kBAAMY,GCrEtB,SAAAA,GACHhC,GAAMmC,IAAI,uDACTC,MAAM,SAAA7B,GACHyB,EAhBD,CACH/F,KCjBuB,kBDkBvBa,YAc4ByD,EAAS8B,UAEpCC,OAAO,SAAArC,GACJ+B,EAZD,CACH/F,KCvBgC,uCFqGzB6F,CAA8ChC,GAAiBe,GAAcb,K,oBGlF7EuC,GAjBS,SAAEzJ,GACtB,OACI,yBAAKG,UAAWC,KAAQsJ,iBACpB,yDACA,yBAAKpJ,MAAO,CAACqJ,MAAM,OAAQC,OAAQ,SAC/B,kBAAChF,EAAD,CAAQZ,YAAahE,EAAMgE,eAE/B,kBAACuC,GAAD,CACIC,QAAQ,SACRzE,QAAS/B,EAAM6J,mBAFnB,UAGA,kBAACtD,GAAD,CACIC,QAAQ,UACRzE,QAAS/B,EAAM8J,mBAFnB,a,wCC4BGC,GAxCD,SAAC/J,GACX,IAAIgK,EAAe,KACbC,EAAe,CAAC7J,KAAQ8J,cAM9B,OAJIlK,EAAMmK,SAAWnK,EAAMoK,gBAAkBpK,EAAMqK,SAC/CJ,EAAa5B,KAAKjI,KAAQkK,SAGtBtK,EAAMuK,aACV,IAAM,QACFP,EAAe,yCAAO7J,UAAW8J,EAAa1H,KAAK,MAAUvC,EAAMwK,cAApD,CAAmEC,MAAOzK,EAAMyK,MAAOC,SAAU1K,EAAM2K,WACtH,MACJ,IAAM,WACFX,EAAe,4CAAU7J,UAAW8J,EAAa1H,KAAK,MAAUvC,EAAMwK,cAAvD,CAAsEC,MAAOzK,EAAMyK,MAAOC,SAAU1K,EAAM2K,WACzH,MACJ,IAAM,SACEX,EACA,4BACI7J,UAAW8J,EAAa1H,KAAK,KAC7BkI,MAAOzK,EAAMyK,MAAOC,SAAU1K,EAAM2K,SAEnC3K,EAAMwK,cAAcI,QAAQ3G,KAAI,SAAA4G,GAAM,OACnC,4BAAQvG,IAAKuG,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAIpB,MACR,QACId,EAAe,yCAAO7J,UAAW8J,EAAa1H,KAAK,MAAUvC,EAAMwK,cAApD,CAAmEC,MAAOzK,EAAMyK,MAAOC,SAAU1K,EAAM2K,WAG9H,OACQ,yBAAKxK,UAAWC,KAAQ2K,OACpB,2BAAO5K,UAAWC,KAAQ2E,OAAQ/E,EAAMgF,OACvCgF,I,ikBC9BXgB,G,2MACFvI,MAAQ,CACJwI,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAS,CACLhB,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,gBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEboB,MAAQ,CACJlB,YAAa,QACbC,cAAe,CACXrH,KAAM,QACNgI,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbqB,eAAiB,CACbnB,YAAa,SACbC,cAAe,CACXI,QACA,CACI,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,UACPa,OAAO,IAGfK,aAAa,EACbC,SAAS,G,EAiBbC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKnJ,SAAS,CAACgJ,SAAS,IACxB,IAAMI,EAAW,GACjB,IAAK,IAAIC,KAAiB,EAAKxJ,MAAMwI,UACjCe,EAASC,GAAiB,EAAKxJ,MAAMwI,UAAUgB,GAAexB,MAElE,IAAMyB,EAAQ,CACVlI,YAAa,EAAKhE,MAAMyI,KACxBhD,MAAO,EAAKzF,MAAMyF,MAClB0G,UAAWH,GAEf9E,GAAMkF,KAAK,eAAgBF,GACtB5C,MAAK,SAAA7B,GACF,EAAK7E,SAAS,CAACgJ,SAAS,IACxB,EAAK5L,MAAMoI,QAAQC,KAAK,QAE3BmB,OAAM,SAAArC,GAAK,OACR,EAAKvE,SAAS,CAACgJ,SAAS,OAEhCS,QAAQC,IAAI,EAAKtM,MAAMgE,c,EAG3BuI,oBAAsB,SAACT,EAAOU,GAC1B,IAAMC,EAAgB,MACf,EAAKhK,MAAMwI,WAEZyB,EAAkB,MACjBD,EAAiBD,IAExBE,EAAmBjC,MAAQqB,EAAMa,OAAOlC,MACxCiC,EAAmBpB,MAAQ,EAAKsB,cAAcF,EAAmBjC,MAAOiC,EAAmBtB,YAC3FsB,EAAmBrC,SAAU,EAC7BoC,EAAiBD,GAAWE,EAE5B,IAAIf,GAAc,EAClB,IAAK,IAAIa,KAAWC,EAChBd,EAAcc,EAAiBD,GAASlB,OAASK,EAErD,EAAK/I,SAAS,CAACqI,UAAWwB,EAAkBd,YAAaA,K,6EArD/ClB,EAAOoC,GACjB,IAAIC,GAAU,EAEd,OAAKD,IAIDA,EAAMxB,WACNyB,EAA2B,KAAjBrC,EAAMsC,QAGbD,K,+BA6CA,IAAD,OACAE,EAAoB,GAC1B,IAAK,IAAI1I,KAAOxB,KAAKL,MAAMwI,UACvB+B,EAAkB3E,KAAK,CACnB4E,GAAI3I,EACJ4I,OAAQpK,KAAKL,MAAMwI,UAAU3G,KAGrC,IAAI6I,EACA,0BAAMC,SAAUtK,KAAK+I,cACZmB,EAAkB/I,KAAI,SAAAoJ,GAAW,OAC9B,kBAACtC,GAAD,CACIzG,IAAK+I,EAAYJ,GACjB1C,YAAa8C,EAAYH,OAAO3C,YAChCC,cAAe6C,EAAYH,OAAO1C,cAClCC,MAAO4C,EAAYH,OAAOzC,MAC1BN,SAAUkD,EAAYH,OAAO5B,MAC7BlB,eAAgBiD,EAAYH,OAAO9B,WACnCf,QAASgD,EAAYH,OAAO7C,QAC5BM,QAAS,SAACmB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOuB,EAAYJ,UAExE,kBAAC1G,GAAD,CAAQC,QAAQ,UAAUrB,UAAWrC,KAAKL,MAAMkJ,aAAhD,UAMZ,OAHG7I,KAAKL,MAAMmJ,UACVuB,EAAO,kBAACxE,GAAD,OAGP,yBAAKxI,UAAWC,KAAQ4K,aACpB,uDACCmC,O,GA9JSnK,aA2KXgG,gBAPS,SAAAvG,GACpB,MAAO,CACHgG,KAAMhG,EAAMuB,YACZyB,MAAOhD,EAAMwG,cAIND,CAAyBgC,IC7KlCsC,G,2MAEFC,yBAA2B,WACvB,EAAKvN,MAAMoI,QAAQoF,U,EAGvBC,yBAA2B,WACvB,EAAKzN,MAAMoI,QAAQsF,QAAQ,2B,wEAI3B,OACI,6BACI,kBAAChE,GAAD,CACI1F,YAAalB,KAAK9C,MAAMyI,KACxBqB,kBAAmBhH,KAAK2K,yBACxB5D,kBAAmB/G,KAAKyK,2BAC5B,kBAAC,IAAD,CACII,KAAM7K,KAAK9C,MAAM4N,MAAMD,KAAO,gBAC9BE,UAAW7C,U,GAnBRhI,aA+BRgG,gBANS,SAAAvG,GACpB,MAAO,CACHgG,KAAMhG,EAAMuB,eAILgF,CAAyBsE,I,oBCNzBpB,GA5BD,SAAClM,GACX,IAAMgE,EAAc,GAEpB,IAAK,IAAIoF,KAAkBpJ,EAAMgE,YAC7BA,EAAYqE,KAAK,CAAC6C,KAAM9B,EAAgB0E,OAAQ9N,EAAMgE,YAAYoF,KAGtE,IAAM2E,EAAmB/J,EAAYC,KAAI,SAAA+J,GACrC,OAAO,0BACH1N,MAAO,CACHqG,cAAe,cACfsH,QAAS,eACTrE,OAAQ,QACRsE,OAAQ,iBACRC,QAAS,OAEb7J,IAAK0J,EAAG9C,MAAO8C,EAAG9C,KARf,KAQuB8C,EAAGF,OAR1B,QAWX,OACI,yBAAK3N,UAAWC,KAAQgO,OACpB,2CAAiBL,GACjB,yCAAe/N,EAAMyF,MAAMC,QAAQ,M,ikBCiBhCsB,M,2MApCXvE,MAAQ,CACJ4L,OAAQ,GACRzC,SAAS,G,mFAGS,IAAD,OACjB1E,GAAMmC,IAAI,gBACLC,MAAK,SAAA5B,GACF,IAAM4G,EAAgB,GACtB,IAAK,IAAIhK,KAAOoD,EAAI6B,KAChB+E,EAAcjG,KAAd,MACOX,EAAI6B,KAAKjF,GADhB,CAEI2I,GAAI3I,KAGZ,EAAK1B,SAAS,CAACgJ,SAAQ,EAAOyC,OAAQC,OAEzC9E,OAAM,SAAA+E,GACH,EAAK3L,SAAS,CAACgJ,SAAQ,S,+BAK/B,OACI,6BACK9I,KAAKL,MAAM4L,OAAOpK,KAAI,SAAAiI,GAAK,OACxB,kBAACkC,GAAD,CACI9J,IAAK4H,EAAMe,GACXjJ,YAAakI,EAAMlI,YACnByB,OAAQyG,EAAMzG,gB,GA9BjBzC,aAqCmBkE,ICrBzBsH,OAdf,WACE,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOb,KAAK,YAAYE,UAAWP,KACnC,kBAAC,IAAD,CAAOK,KAAK,UAAUE,UAAWY,KACjC,kBAAC,IAAD,CAAOd,KAAK,IAAIE,UAAW9F,SCFjB2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2D,6jBChBN,IAAMkB,GAAqB,CACvBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGLC,GAAe,CACjBnL,YAAa,KACbiF,WAAY,EACZ9B,OAAO,GA4CIiI,GAzCC,WAAmC,IAAlC3M,EAAiC,uDAAzB0M,GAAcE,EAAW,uCAC9C,OAAQA,EAAOlM,MACX,ITjBsB,iBSkBlB,OAAO,MACAV,EADP,CAEIuB,YAAY,MACLvB,EAAMuB,YADF,eAENqL,EAAOjG,eAAkB3G,EAAMuB,YAAYqL,EAAOjG,gBAAkB,IAEzEH,WAAYxG,EAAMwG,WAAa6F,GAAmBO,EAAOjG,kBAEjE,ITzByB,oBS0BrB,OAAO,MACA3G,EADP,CAEIuB,YAAY,MACLvB,EAAMuB,YADF,eAENqL,EAAOjG,eAAkB3G,EAAMuB,YAAYqL,EAAOjG,gBAAkB,IAEzEH,WAAYxG,EAAMwG,WAAa6F,GAAmBO,EAAOjG,kBAEjE,ITjCuB,kBSkCnB,OAAO,MACA3G,EADP,CAEIuB,YAAa,CACT+K,MAAOM,EAAOrL,YAAY+K,MAC1BG,MAAOG,EAAOrL,YAAYkL,MAC1BF,OAAQK,EAAOrL,YAAYgL,OAC3BC,KAAMI,EAAOrL,YAAYiL,MAE7B9H,OAAO,IAEf,IT3CgC,2BS4C5B,OAAO,MACA1E,EADP,CAEI0E,OAAO,IAEf,QACQ,OAAO1E,I,SCzCjB6M,GAAmBX,OAAOY,sCAAwCC,IAElEC,GAAQC,YAAYN,GAASE,GAC/BK,YAAgBC,QAGdC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAKZK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SFwGvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9G,MAAK,SAAA+G,GACjCA,EAAaC,kB","file":"static/js/main.f260b573.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngridient__BreadBottom__KNGSI\",\"BreadTop\":\"BurgerIngridient__BreadTop__gLKm8\",\"Seeds1\":\"BurgerIngridient__Seeds1__1CC-L\",\"Seeds2\":\"BurgerIngridient__Seeds2__2JQuo\",\"Meat\":\"BurgerIngridient__Meat__fpeUf\",\"Cheese\":\"BurgerIngridient__Cheese__2ZngM\",\"Salad\":\"BurgerIngridient__Salad__3lXW9\",\"Bacon\":\"BurgerIngridient__Bacon__3E3hs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__acMdt\",\"Open\":\"SideDrawer_Open__2-2i4\",\"Close\":\"SideDrawer_Close__uGf87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3hw98\",\"Label\":\"BuildControl_Label__2FbTw\",\"Less\":\"BuildControl_Less__mtfw2\",\"More\":\"BuildControl_More__1x-WG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__gDC5J\",\"Label\":\"Input_Label__bwwXZ\",\"InputElement\":\"Input_InputElement__3-X_8\",\"Invalid\":\"Input_Invalid__3rWTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__rbpG7\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1oiXS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__SZaCW\",\"active\":\"NavigationItem_active__2bsr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1FEZk\",\"OrderButton\":\"BuildControls_OrderButton__nrXEI\",\"enable\":\"BuildControls_enable__3UDvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2pbnn\",\"Success\":\"Button_Success__1r_qz\",\"Danger\":\"Button_Danger__17Gut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1TgwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1qYRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu_Menu__1usem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3c9wG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__WLkSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2tsE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__cA10k\",\"load2\":\"Spinner_load2__1rvOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__33k8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__3L6Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__Pa06q\"};","const Aux = ( props ) => props.children;\r\n\r\nexport default Aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            to={props.link}\r\n            exact\r\n            activeClassName={classes.active}>{props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\">BurgerBuilder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './Menu.module.css';\r\n\r\nconst menu = ( props ) => (\r\n    <div className={classes.Menu} onClick={props.menuOpened}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default menu;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Menu from '../Menu/Menu';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <Menu menuOpened={props.opened}/>\r\n        <Logo height=\"80%\"/>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems/>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst backdrop = ( props ) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Aux';\r\n\r\nconst sideDrawer =  ( props ) => {\r\n    let attachedClasses = [ classes.SideDrawer, classes.Close ];\r\n    if (props.open) {\r\n        attachedClasses = [ classes.SideDrawer, classes.Open ];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo height=\"11%\"/>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport classes from './Layout.css';\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../Navigation/Sidedrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerOpenHandler = () => {\r\n        this.setState({showSideDrawer:true});\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar opened={this.sideDrawerOpenHandler}/>\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerCloseHandler}\r\n                    />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n     }\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngridient.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngridient extends Component {\r\n    render () {\r\n        let ingridient = null;\r\n\r\n    switch (this.props.type) {\r\n        case ( 'bread-bottom' ):\r\n            ingridient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case ( 'bread-top' ):\r\n            ingridient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ( 'meat' ):\r\n            ingridient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case ( 'cheese' ):\r\n                ingridient = <div className={classes.Cheese}></div>;\r\n                break;\r\n        case ( 'salad' ):\r\n                ingridient = <div className={classes.Salad}></div>;\r\n                 break;\r\n        case ( 'bacon' ):\r\n                ingridient = <div className={classes.Bacon}></div>;\r\n                break;\r\n        default:\r\n            ingridient = null;\r\n    }\r\n\r\n    return ingridient;\r\n    }\r\n}\r\n\r\nBurgerIngridient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngridient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport {withRouter} from 'react-router-dom';\r\nimport BurgerIngridient from './BurgerIngridient/BurgerIngridient'\r\n\r\nconst burger  = ( props ) => {\r\n\r\n    let transformedIngridients = Object.keys(props.ingridients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingridients[igKey])].map((_, i) => {\r\n                return <BurgerIngridient key={igKey + i} type={igKey} />\r\n            } );\r\n        } )\r\n        .reduce( ( arr, el ) => {\r\n            return arr.concat(el);\r\n        }, [] );\r\n\r\n    if(transformedIngridients.length === 0) {\r\n        transformedIngridients = <p>Start adding</p>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngridient type=\"bread-top\" />\r\n            {transformedIngridients}\r\n            <BurgerIngridient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(burger);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = ( props ) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button\r\n            className={classes.Less}\r\n            onClick={props.removed}\r\n            disabled={props.disabled}>\r\n                Less</button>\r\n        <button\r\n            className={classes.More}\r\n            onClick={props.added}>\r\n                More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControls/BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\nconst buildControls = ( props ) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl\r\n            key={ctrl.label}\r\n            label={ctrl.label}\r\n            added={() => props.ingridientAdded(ctrl.type)}\r\n            removed={() => props.ingridientRemoved(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}/>\r\n        ))}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchaseable}\r\n            onClick={props.ordered}>ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React from 'react'\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Aux';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst modal = ( props ) => (\r\n    <Aux>\r\n        <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = ( props ) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button';\r\nimport Aux from '../../../hoc/Aux';\r\n\r\nconst orderSummary = ( props ) => {\r\n    const ingridientsSummary = Object.keys(props.ingridients)\r\n        .map(igKey => {\r\n            return (\r\n            <li>\r\n                <span style={{textTransform: 'capitalize'}}>\r\n                {igKey}: {props.ingridients[igKey]}</span>\r\n            </li>);\r\n        });\r\n\r\n    return (\r\n      <Aux>\r\n          <h3>Your order</h3>\r\n          <p>A delicious burger with a following ingridients:</p>\r\n          <ul>\r\n            {ingridientsSummary}\r\n          </ul>\r\n          <p>Total price: {props.price}</p>\r\n          <p>Continue to check out?</p>\r\n          <Button btnType=\"Danger\" clicked={props.purchaseCancelled}>CANCEL</Button>\r\n          <Button btnType=\"Success\" clicked={props.purchaseContinued}>CONTINUE</Button>\r\n      </Aux>\r\n    );\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Aux';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount () {\r\n            axios.interceptors.request.use( req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                        show={this.state.error}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-edd41.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\r\nimport * as burgerBuilderActions from '../../store/actions/index'\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nclass BurgerBulder extends Component {\r\n\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.props.onInitIngridients();\r\n    }\r\n\r\n    updatePurchaseState ( ingridients ) {\r\n        const sum = Object.keys(ingridients).map(igKey => {\r\n            return ingridients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum>0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ?  <p>Error</p> : <Spinner/>;\r\n\r\n        if (this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingridients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingridientAdded={this.props.onIngridientAdded}\r\n                        ingridientRemoved={this.props.onIngridientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchaseable={ this.updatePurchaseState( this.props.ings )}\r\n                        ordered={this.purchaseHandler}\r\n                        price = {this.props.price}/>;\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                    ingridients={this.props.ings}\r\n                    price={this.props.price.toFixed(2)}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}/>;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingridients,\r\n        price: state.totalPrice,\r\n        error: state.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngridientAdded: (ingName) => dispatch(burgerBuilderActions.addIngridient(ingName)),\r\n        onIngridientRemoved: (ingName) => dispatch(burgerBuilderActions.removeIngridient(ingName)),\r\n        onInitIngridients: () => dispatch(burgerBuilderActions.initIngridients())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (withErrorHandler(BurgerBulder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\n\r\nexport const setIngridients = (ingridients) => {\r\n    return {\r\n        type: actionTypes.SET_INGRIDIENTS,\r\n        ingridients: ingridients\r\n    }\r\n}\r\n\r\nexport const fetchIngridientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGRIDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngridients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-edd41.firebaseio.com/ingridients.json')\r\n        .then (response => {\r\n            dispatch(setIngridients(response.data));\r\n        })\r\n        .catch (error => {\r\n            dispatch(fetchIngridientsFailed());\r\n        });\r\n    }\r\n}","export const ADD_INGRIDIENT = 'ADD_INGRIDIENT';\r\nexport const REMOVE_INGRIDIENT = 'REMOVE_INGRIDIENT';\r\nexport const SET_INGRIDIENTS = 'SET_INGRIDIENTS';\r\nexport const FETCH_INGRIDIENTS_FAILED = 'FETCH_INGRIDIENTS_FAILED';","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = ( props ) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!!!</h1>\r\n            <div style={{width:\"100%\", margin: \"auto\"}}>\r\n                <Burger ingridients={props.ingridients}/>\r\n            </div>\r\n            <Button\r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button\r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>Confirm</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input') :\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea') :\r\n            inputElement = <textarea className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\r\n            break;\r\n        case ('select') :\r\n                inputElement =\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value} onChange={props.changed}\r\n                    >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>;\r\n                break;\r\n        default :\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\r\n    }\r\n\r\n    return (\r\n            <div className={classes.Input}>\r\n                <label className={classes.Label}>{props.label}</label>\r\n                {inputElement}\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street:  {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email:  {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod:  {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options:\r\n                    [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false,\r\n        loading: false\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = false;\r\n\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '';\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({loading: true});\r\n        const formData = {};\r\n        for (let formElementId in this.state.orderForm) {\r\n            formData[formElementId] = this.state.orderForm[formElementId].value;\r\n        }\r\n        const order = {\r\n            ingridients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                this.setState({loading: false});\r\n                this.props.history.push('/')\r\n            })\r\n            .catch(error =>\r\n                this.setState({loading: false})\r\n                );\r\n        console.log(this.props.ingridients);\r\n    }\r\n\r\n    inputChangedHandler = (event, inputId) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputId]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputId] = updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for( let inputId in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputId].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => (\r\n                        <Input\r\n                            key={formElement.id}\r\n                            elementType={formElement.config.elementType}\r\n                            elementConfig={formElement.config.elementConfig}\r\n                            value={formElement.config.value}\r\n                            invalid={!formElement.config.valid}\r\n                            shouldValidate={formElement.config.validation}\r\n                            touched={formElement.config.touched}\r\n                            changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                    ))}\r\n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\r\n                </form>\r\n        );\r\n        if(this.state.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingridients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingridients={this.props.ings}\r\n                    checkoutContinued={this.checkoutContinuedHandler}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}/>\r\n                <Route\r\n                    path={this.props.match.path + '/contact-data'}\r\n                    component={ContactData}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.ingridients\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingridients = [];\r\n\r\n    for( let ingridientName in props.ingridients) {\r\n        ingridients.push({name: ingridientName, amount: props.ingridients[ingridientName]});\r\n    }\r\n\r\n    const ingridientOutput = ingridients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize ',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingridients: {ingridientOutput}</p>\r\n            <p>Price: USD {props.price.toFixed(2)}</p>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/WithErrorHandler/WithErrorHandler';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount () {\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading:false, orders: fetchedOrders});\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading:false});\r\n            })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingridients={order.ingridients}\r\n                        price={+order.price}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport BurgerBulder from './containers/BurgerBuilder/BurgerBulder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" component={BurgerBulder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst INGRIDIENTS_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.3,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst initialState = {\r\n    ingridients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName] : state.ingridients[action.ingridientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGRIDIENTS_PRICES[action.ingridientName]\r\n        };\r\n        case actionTypes.REMOVE_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName] : state.ingridients[action.ingridientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGRIDIENTS_PRICES[action.ingridientName]\r\n        };\r\n        case actionTypes.SET_INGRIDIENTS:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    salad: action.ingridients.salad,\r\n                    bacon: action.ingridients.bacon,\r\n                    cheese: action.ingridients.cheese,\r\n                    meat: action.ingridients.meat\r\n                },\r\n                error: false\r\n            }\r\n        case actionTypes.FETCH_INGRIDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n                return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}